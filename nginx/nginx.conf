user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

# Load ACME module
load_module modules/ngx_http_acme_module.so;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;
    keepalive_requests 512;

    # DNS resolver configuration for Docker
    # 127.0.0.11 is Docker's embedded DNS server that forwards to host resolver
    # and handles service discovery - this is the standard resolver for containers
    resolver 127.0.0.11 valid=30s ipv6=off;

    # Upstream configuration for TT-CableGen Flask app
    upstream tt_cablegen_backend {
        server tt-cablegen:5000;
        keepalive 32;
    }

    # ACME shared memory zone
    acme_shared_zone zone=acme_shared:1M;

    # ACME issuer configuration for Vault
    acme_issuer vault {
        uri         ${VAULT_ACME_DIRECTORY_URL};
        contact     ${VAULT_ACME_CONTACT};
        state_path  /var/cache/nginx/acme-vault;
        accept_terms_of_service;
    }

    # HTTP server for ACME challenges and redirects
    server {
        listen 80;
        server_name ${TT_FQDN};

        # Handle ACME challenges
        location /.well-known/acme-challenge/ {
            # ACME module handles this automatically
        }

        # Redirect everything else to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server with ACME certificate and reverse proxy
    server {
        listen 443 ssl;
        server_name ${TT_FQDN};

        # ACME certificate configuration
        acme_certificate vault;
        ssl_certificate       $acme_certificate;
        ssl_certificate_key   $acme_certificate_key;
        ssl_certificate_cache max=2;

        # SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Proxy settings for Flask application
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Buffer settings for better performance
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Reverse proxy all requests to TT-CableGen Flask app
        location / {
            proxy_pass http://tt_cablegen_backend;
            
            # Handle WebSocket connections if needed
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Static file handling (if Flask serves static files)
        location /static/ {
            proxy_pass http://tt_cablegen_backend;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
}
